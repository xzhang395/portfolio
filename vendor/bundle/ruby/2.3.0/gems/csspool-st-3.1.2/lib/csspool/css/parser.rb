#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.7
# from Racc grammer file "".
#

require 'racc/parser.rb'
module CSSPool
  module CSS
    class Parser < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 363)

def numeric thing
  thing = thing.gsub(/[^\d.]/, '')
  Integer(thing) rescue Float(thing)
end

def interpret_identifier s
  interpret_escapes s
end

def interpret_uri s
  interpret_escapes s.match(/^url\((.*)\)$/mu)[1].strip.match(/^(['"]?)((?:\\.|.)*)\1$/mu)[2]
end

def interpret_string s
  interpret_escapes s.match(/^(['"])((?:\\.|.)*)\1$/mu)[2]
end

def interpret_escapes s
  token_exp = /\\([0-9a-fA-F]{1,6}(?:\r\n|\s)?)|\\(.)|(.)/mu
  characters = s.scan(token_exp).map do |u_escape, i_escape, ident|
    if u_escape
      code = u_escape.chomp.to_i 16
      code = 0xFFFD if code > 0x10FFFF
      [code].pack('U')
    elsif i_escape
      if i_escape == "\n"
        ''
      else
        i_escape
      end
    else
      ident
    end
  end.join ''
end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     8,     9,    96,    51,    21,    15,    75,    76,    52,    22,
    27,    29,     8,     9,    95,    67,    21,    15,   154,   100,
    21,    22,    27,    29,    21,    22,    27,    29,    69,    22,
    27,    29,    13,    51,    30,    28,    21,    15,    52,    99,
   130,    22,    27,    29,    13,    68,    30,    28,     8,     9,
    30,    28,    21,    15,    30,    28,    43,    22,    27,    29,
    72,    43,    73,    21,    15,    94,    30,    28,    22,    27,
    29,    21,    15,    27,    29,    87,    22,    27,    29,    36,
    13,    84,    30,    28,    43,    45,    86,    46,   102,    97,
    45,    13,    75,    30,    28,    80,   137,    30,    28,    13,
    83,    30,    28,    21,    15,    27,    29,    37,    22,    27,
    29,    57,    45,    45,    51,    85,    80,   101,    48,    52,
   117,   142,   129,    45,    58,    59,   144,    77,   115,    30,
    28,    13,    74,    30,    28,   114,   133,   128,   134,   119,
   127,   121,   120,   122,   123,   124,   125,   126,   116,   117,
   151,   129,    93,    90,    91,    92,   152,   115,    27,    29,
    27,    29,   153,   136,   114,   135,   128,   103,   119,   127,
   121,   120,   122,   123,   124,   125,   126,   116,   117,   155,
   129,   141,    30,    28,    30,    28,   115,    27,    29,   132,
    70,   131,    66,   114,    65,   128,   160,   119,   127,   121,
   120,   122,   123,   124,   125,   126,   116,   117,   161,   129,
   162,    30,    28,   163,   164,   115,   165,    80,    55,    54,
   144,    34,   114,   172,   128,   144,   119,   127,   121,   120,
   122,   123,   124,   125,   126,   116,   117,    31,   129,   159,
     3,   144,   nil,   nil,   115,   nil,   nil,   nil,   nil,   nil,
   nil,   114,   nil,   128,   nil,   119,   127,   121,   120,   122,
   123,   124,   125,   126,   116,   117,   nil,   129,   nil,   nil,
   nil,   nil,   nil,   115,   nil,   nil,   nil,   nil,   nil,   nil,
   114,   nil,   128,   nil,   119,   127,   121,   120,   122,   123,
   124,   125,   126,   116,   117,   nil,   129,   169,   nil,   nil,
   nil,   nil,   115,   nil,   nil,   nil,   nil,   nil,   nil,   114,
   nil,   128,   nil,   119,   127,   121,   120,   122,   123,   124,
   125,   126,   116,   117,   nil,   129,   nil,   nil,   nil,   nil,
   nil,   115,   nil,   nil,   nil,   nil,   nil,   nil,   114,   nil,
   128,   nil,   119,   127,   121,   120,   122,   123,   124,   125,
   126,   116,   117,   nil,   129,   nil,   nil,   nil,   nil,   nil,
   115,   nil,   nil,   nil,   nil,   nil,   nil,   114,   nil,   128,
   nil,   119,   127,   121,   120,   122,   123,   124,   125,   126,
   116,   117,   nil,   129,   nil,   146,   nil,   nil,   nil,   115,
   nil,   nil,   148,   nil,   nil,   nil,   114,   nil,   128,   147,
   119,   127,   121,   120,   122,   123,   124,   125,   126,   116,
   117,   nil,   129,   106,   nil,   nil,   nil,   nil,   115,   nil,
   nil,   nil,   nil,   nil,   nil,   114,   nil,   128,   nil,   119,
   127,   121,   120,   122,   123,   124,   125,   126,   116,   128,
   nil,   119,   127,   121,   120,   122,   123,   124,   125,   126 ]

racc_action_check = [
     2,     2,    69,    45,     2,     2,    41,    41,    45,     2,
     2,     2,     5,     5,    69,    30,     5,     5,   112,    80,
    56,     5,     5,     5,    55,    56,    56,    56,    30,    55,
    55,    55,     2,    84,     2,     2,    15,    15,    84,    77,
    86,    15,    15,    15,     5,    30,     5,     5,     6,     6,
    56,    56,     6,     6,    55,    55,    75,     6,     6,     6,
    35,    35,    35,    12,    12,    68,    15,    15,    12,    12,
    12,    11,    11,    26,    26,    52,    11,    11,    11,     9,
     6,    49,     6,     6,    13,    75,    50,    13,    81,    71,
    35,    12,    71,    12,    12,    99,    96,    26,    26,    11,
    47,    11,    11,    10,    10,    25,    25,     9,    10,    10,
    10,    18,   100,    13,    14,    50,    44,    81,    14,    14,
   159,   102,   159,    99,    18,    18,   105,    43,   159,    25,
    25,    10,    40,    10,    10,   159,    91,   159,    91,   159,
   159,   159,   159,   159,   159,   159,   159,   159,   159,   149,
   108,   149,    66,    66,    66,    66,   110,   149,    24,    24,
    19,    19,   111,    92,   149,    92,   149,    82,   149,   149,
   149,   149,   149,   149,   149,   149,   149,   149,   101,   113,
   101,   101,    24,    24,    19,    19,   101,    23,    23,    90,
    34,    90,    29,   101,    28,   101,   131,   101,   101,   101,
   101,   101,   101,   101,   101,   101,   101,   106,   132,   106,
   133,    23,    23,   134,   135,   106,   136,   139,    17,    16,
   145,     8,   106,   156,   106,   158,   106,   106,   106,   106,
   106,   106,   106,   106,   106,   106,   130,     3,   130,   130,
     1,   174,   nil,   nil,   130,   nil,   nil,   nil,   nil,   nil,
   nil,   130,   nil,   130,   nil,   130,   130,   130,   130,   130,
   130,   130,   130,   130,   130,   141,   nil,   141,   nil,   nil,
   nil,   nil,   nil,   141,   nil,   nil,   nil,   nil,   nil,   nil,
   141,   nil,   141,   nil,   141,   141,   141,   141,   141,   141,
   141,   141,   141,   141,   142,   nil,   142,   142,   nil,   nil,
   nil,   nil,   142,   nil,   nil,   nil,   nil,   nil,   nil,   142,
   nil,   142,   nil,   142,   142,   142,   142,   142,   142,   142,
   142,   142,   142,   114,   nil,   114,   nil,   nil,   nil,   nil,
   nil,   114,   nil,   nil,   nil,   nil,   nil,   nil,   114,   nil,
   114,   nil,   114,   114,   114,   114,   114,   114,   114,   114,
   114,   114,   169,   nil,   169,   nil,   nil,   nil,   nil,   nil,
   169,   nil,   nil,   nil,   nil,   nil,   nil,   169,   nil,   169,
   nil,   169,   169,   169,   169,   169,   169,   169,   169,   169,
   169,   107,   nil,   107,   nil,   107,   nil,   nil,   nil,   107,
   nil,   nil,   107,   nil,   nil,   nil,   107,   nil,   107,   107,
   107,   107,   107,   107,   107,   107,   107,   107,   107,   107,
    85,   nil,    85,    85,   nil,   nil,   nil,   nil,    85,   nil,
   nil,   nil,   nil,   nil,   nil,    85,   nil,    85,   nil,    85,
    85,    85,    85,    85,    85,    85,    85,    85,    85,   118,
   nil,   118,   118,   118,   118,   118,   118,   118,   118,   118 ]

racc_action_pointer = [
   nil,   240,    -2,   237,   nil,    10,    46,   nil,   217,    75,
    97,    65,    57,    78,   108,    30,   210,   210,   104,   148,
   nil,   nil,   nil,   175,   146,    93,    61,   nil,   188,   186,
     9,   nil,   nil,   nil,   185,    55,   nil,   nil,   nil,   nil,
   122,    -2,   nil,   120,   109,    -3,   nil,    90,   nil,    76,
    79,   nil,    69,   nil,   nil,    18,    14,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   138,   nil,    59,    -4,
   nil,    84,   nil,   nil,   nil,    50,   nil,    33,   nil,   nil,
    13,    81,   149,   nil,    27,   406,     4,   nil,   nil,   nil,
   185,   132,   159,   nil,   nil,   nil,    78,   nil,   nil,    88,
    77,   174,    85,   nil,   nil,    93,   203,   377,   143,   nil,
   149,   155,    11,   172,   319,   nil,   nil,   nil,   418,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   232,   182,   194,   196,   199,   200,   202,   nil,   nil,   210,
   nil,   261,   290,   nil,   nil,   187,   nil,   nil,   nil,   145,
   nil,   nil,   nil,   nil,   nil,   nil,   205,   nil,   192,   116,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   348,
   nil,   nil,   nil,   nil,   208,   nil,   nil ]

racc_action_default = [
    -1,  -117,  -117,  -117,    -2,    -5,    -6,    -7,  -117,  -117,
   -31,   -32,  -117,  -117,  -117,  -117,  -117,   -41,   -43,   -48,
   -49,   -50,   -51,   -52,   -53,   -54,   -55,   -60,  -117,  -117,
  -117,   177,    -3,    -4,  -117,  -117,   -12,   -13,   -29,   -30,
  -117,  -117,   -15,   -19,   -21,  -117,   -35,  -117,   -37,   -75,
  -117,   -82,  -117,   -38,   -39,  -117,  -117,   -44,   -45,   -46,
   -47,   -56,   -57,   -58,   -59,   -61,  -117,   -69,  -117,  -117,
    -8,  -117,   -10,   -11,   -33,  -117,   -34,  -117,   -18,   -20,
  -117,  -117,  -117,   -36,   -74,  -117,  -117,   -83,   -40,   -42,
  -117,  -117,  -117,   -68,   -70,   -71,  -117,    -9,   -14,   -17,
  -117,  -117,  -117,   -28,   -73,   -81,  -117,   -89,   -90,   -91,
   -92,   -93,   -94,   -95,  -117,   -99,  -101,  -103,  -117,  -105,
  -106,  -107,  -108,  -109,  -110,  -111,  -112,  -113,  -114,  -116,
  -117,  -117,  -117,  -117,  -117,  -117,  -117,   -72,   -16,   -23,
   -24,  -117,  -117,   -76,   -80,   -81,   -84,   -85,   -86,  -117,
   -88,  -115,  -102,  -100,   -98,   -96,  -117,  -104,   -81,  -117,
   -62,   -63,   -64,   -65,   -66,   -67,   -22,   -25,   -26,  -117,
   -77,   -87,   -97,   -78,   -81,   -27,   -79 ]

racc_goto_table = [
    78,    79,   105,    47,    41,    60,   139,   139,   143,    61,
    62,    63,    64,     4,    81,    82,    32,    33,   140,    38,
    39,    40,    98,   145,   150,    53,    71,    35,    88,    89,
    56,   156,     2,     1,   149,   157,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   158,   170,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   138,   nil,   167,   168,
   nil,   173,   nil,   nil,   nil,   nil,   171,   nil,   nil,   nil,
   nil,   nil,   nil,   104,   nil,   nil,   174,   176,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   175,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   166 ]

racc_goto_check = [
    10,    10,    14,    19,     8,    25,    11,    11,    31,    25,
    25,    25,    25,     2,    13,    12,     2,     2,    14,     6,
     6,     6,     9,    14,    14,    18,     8,     7,    20,    21,
    23,    14,     3,     1,    32,    35,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    14,    31,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10,   nil,    14,    14,
   nil,    31,   nil,   nil,   nil,   nil,    14,   nil,   nil,   nil,
   nil,   nil,   nil,    19,   nil,   nil,    14,    31,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    14,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    10 ]

racc_goto_pointer = [
   nil,    33,    11,    32,   nil,   nil,     9,    18,    -9,   -53,
   -43,   -93,   -30,   -31,   -83,   nil,   nil,   nil,    10,   -11,
   -27,   -27,   nil,    12,   nil,   -14,   nil,   nil,   nil,   nil,
   nil,   -97,   -73,   nil,   nil,   -83,   nil,   nil,   nil,   nil,
   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     5,     6,     7,   nil,   nil,    42,
   nil,    44,   nil,    50,   nil,    10,    11,    12,    14,   nil,
    16,    17,    18,   nil,    19,    20,    23,    24,    25,    26,
    49,   nil,   nil,   107,   108,   109,   110,   111,   112,   113,
   118 ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 41, :_reduce_1,
  2, 39, :_reduce_2,
  2, 40, :_reduce_none,
  2, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  1, 40, :_reduce_none,
  3, 42, :_reduce_8,
  4, 43, :_reduce_9,
  3, 43, :_reduce_10,
  2, 45, :_reduce_none,
  1, 45, :_reduce_12,
  1, 45, :_reduce_13,
  3, 46, :_reduce_14,
  1, 46, :_reduce_15,
  4, 47, :_reduce_16,
  3, 47, :_reduce_17,
  2, 47, :_reduce_18,
  1, 47, :_reduce_19,
  2, 47, :_reduce_20,
  1, 47, :_reduce_21,
  4, 48, :_reduce_22,
  3, 48, :_reduce_23,
  3, 50, :_reduce_24,
  4, 50, :_reduce_25,
  4, 50, :_reduce_26,
  5, 50, :_reduce_27,
  3, 49, :_reduce_28,
  2, 44, :_reduce_none,
  2, 44, :_reduce_none,
  1, 44, :_reduce_none,
  1, 44, :_reduce_none,
  3, 54, :_reduce_33,
  3, 55, :_reduce_34,
  2, 55, :_reduce_35,
  3, 53, :_reduce_36,
  2, 53, :_reduce_37,
  2, 56, :_reduce_38,
  2, 56, :_reduce_39,
  3, 58, :_reduce_40,
  1, 58, :_reduce_41,
  3, 59, :_reduce_42,
  1, 59, :_reduce_none,
  1, 61, :_reduce_44,
  1, 61, :_reduce_45,
  1, 61, :_reduce_46,
  2, 60, :_reduce_47,
  1, 60, :_reduce_48,
  1, 60, :_reduce_49,
  1, 62, :_reduce_50,
  1, 62, :_reduce_51,
  1, 63, :_reduce_52,
  1, 63, :_reduce_53,
  1, 63, :_reduce_54,
  1, 63, :_reduce_55,
  2, 63, :_reduce_56,
  2, 63, :_reduce_57,
  2, 63, :_reduce_58,
  2, 63, :_reduce_59,
  1, 64, :_reduce_60,
  2, 65, :_reduce_61,
  5, 66, :_reduce_62,
  5, 66, :_reduce_63,
  5, 66, :_reduce_64,
  5, 66, :_reduce_65,
  5, 66, :_reduce_66,
  5, 66, :_reduce_67,
  3, 66, :_reduce_68,
  2, 67, :_reduce_69,
  3, 67, :_reduce_70,
  3, 67, :_reduce_71,
  4, 67, :_reduce_72,
  3, 57, :_reduce_none,
  2, 57, :_reduce_none,
  1, 57, :_reduce_none,
  4, 68, :_reduce_76,
  5, 68, :_reduce_77,
  5, 68, :_reduce_78,
  6, 68, :_reduce_79,
  1, 69, :_reduce_80,
  0, 69, :_reduce_81,
  1, 51, :_reduce_82,
  2, 51, :_reduce_83,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  3, 52, :_reduce_87,
  2, 52, :_reduce_88,
  1, 52, :_reduce_89,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  1, 71, :_reduce_none,
  2, 77, :_reduce_96,
  3, 77, :_reduce_97,
  2, 76, :_reduce_98,
  1, 76, :_reduce_99,
  2, 75, :_reduce_100,
  1, 75, :_reduce_101,
  2, 74, :_reduce_102,
  1, 74, :_reduce_103,
  2, 73, :_reduce_104,
  1, 73, :_reduce_105,
  1, 73, :_reduce_106,
  1, 73, :_reduce_107,
  1, 73, :_reduce_108,
  1, 73, :_reduce_109,
  1, 73, :_reduce_110,
  1, 73, :_reduce_111,
  1, 73, :_reduce_112,
  1, 78, :_reduce_113,
  1, 78, :_reduce_114,
  2, 72, :_reduce_115,
  1, 72, :_reduce_116 ]

racc_reduce_n = 117

racc_shift_n = 177

racc_token_table = {
  false => 0,
  :error => 1,
  :CHARSET_SYM => 2,
  :IMPORT_SYM => 3,
  :STRING => 4,
  :SEMI => 5,
  :IDENT => 6,
  :S => 7,
  :COMMA => 8,
  :LBRACE => 9,
  :RBRACE => 10,
  :STAR => 11,
  :HASH => 12,
  :LSQUARE => 13,
  :RSQUARE => 14,
  :EQUAL => 15,
  :INCLUDES => 16,
  :DASHMATCH => 17,
  :RPAREN => 18,
  :FUNCTION => 19,
  :GREATER => 20,
  :PLUS => 21,
  :SLASH => 22,
  :NUMBER => 23,
  :MINUS => 24,
  :LENGTH => 25,
  :PERCENTAGE => 26,
  :EMS => 27,
  :EXS => 28,
  :ANGLE => 29,
  :TIME => 30,
  :FREQ => 31,
  :URI => 32,
  :IMPORTANT_SYM => 33,
  :MEDIA_SYM => 34,
  :LPAREN => 35,
  ":" => 36,
  "." => 37 }

racc_nt_base = 38

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "CHARSET_SYM",
  "IMPORT_SYM",
  "STRING",
  "SEMI",
  "IDENT",
  "S",
  "COMMA",
  "LBRACE",
  "RBRACE",
  "STAR",
  "HASH",
  "LSQUARE",
  "RSQUARE",
  "EQUAL",
  "INCLUDES",
  "DASHMATCH",
  "RPAREN",
  "FUNCTION",
  "GREATER",
  "PLUS",
  "SLASH",
  "NUMBER",
  "MINUS",
  "LENGTH",
  "PERCENTAGE",
  "EMS",
  "EXS",
  "ANGLE",
  "TIME",
  "FREQ",
  "URI",
  "IMPORTANT_SYM",
  "MEDIA_SYM",
  "LPAREN",
  "\":\"",
  "\".\"",
  "$start",
  "document",
  "stylesheet",
  "@1",
  "charset",
  "import",
  "body",
  "import_location",
  "medium",
  "media_query",
  "media_expression",
  "expression",
  "expression_internal",
  "property",
  "expr",
  "ruleset",
  "media",
  "start_media",
  "start_selector",
  "declarations",
  "selectors",
  "selector",
  "simple_selector",
  "combinator",
  "element_name",
  "hcap",
  "hash",
  "class",
  "attrib",
  "pseudo",
  "declaration",
  "prio",
  "operator",
  "term",
  "ident",
  "numeric",
  "string",
  "uri",
  "hexcolor",
  "function",
  "unary_operator" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 9)
  def _reduce_1(val, _values, result)
     @handler.start_document 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 11)
  def _reduce_2(val, _values, result)
     @handler.end_document 
    result
  end
.,.,

# reduce 3 omitted

# reduce 4 omitted

# reduce 5 omitted

# reduce 6 omitted

# reduce 7 omitted

module_eval(<<'.,.,', 'parser.y', 21)
  def _reduce_8(val, _values, result)
     @handler.charset interpret_string(val[1]), {} 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 25)
  def _reduce_9(val, _values, result)
            @handler.import_style val[2], val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 28)
  def _reduce_10(val, _values, result)
            @handler.import_style [], val[1]
      
    result
  end
.,.,

# reduce 11 omitted

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_12(val, _values, result)
     result = Terms::String.new interpret_string val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_13(val, _values, result)
     result = Terms::URI.new interpret_uri val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_14(val, _values, result)
            result = val.first + [val.last]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_15(val, _values, result)
            result = [val.first]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 46)
  def _reduce_16(val, _values, result)
            result = [Terms::Ident.new(interpret_identifier val[0]), Terms::Ident.new(interpret_identifier val[2])] + val.last
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_17(val, _values, result)
            result = [Terms::Ident.new(interpret_identifier val[0]), Terms::Ident.new(interpret_identifier val.last)]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 52)
  def _reduce_18(val, _values, result)
            result = [Terms::Ident.new(interpret_identifier val.first)] + val.last
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 55)
  def _reduce_19(val, _values, result)
            result = [Terms::Ident.new(interpret_identifier val.first)]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 58)
  def _reduce_20(val, _values, result)
            result = [val.first] + val.last
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 61)
  def _reduce_21(val, _values, result)
            result = [val.first]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 66)
  def _reduce_22(val, _values, result)
            result = [Terms::Ident.new(interpret_identifier val[1]), val[2]] + val.last
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 69)
  def _reduce_23(val, _values, result)
            result = [Terms::Ident.new(interpret_identifier val[1]), val.last]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 74)
  def _reduce_24(val, _values, result)
     result = Selectors::MediaExpression.new val.first, val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 76)
  def _reduce_25(val, _values, result)
     result = Selectors::MediaExpression.new val.first, val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 78)
  def _reduce_26(val, _values, result)
     result = Selectors::MediaExpression.new val.first, val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 80)
  def _reduce_27(val, _values, result)
     result = Selectors::MediaExpression.new val.first, val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 84)
  def _reduce_28(val, _values, result)
            result = val[1]
      
    result
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'parser.y', 94)
  def _reduce_33(val, _values, result)
     @handler.end_media val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 98)
  def _reduce_34(val, _values, result)
            @handler.start_media val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 100)
  def _reduce_35(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 104)
  def _reduce_36(val, _values, result)
            @handler.end_selector val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 107)
  def _reduce_37(val, _values, result)
            @handler.end_selector val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 111)
  def _reduce_38(val, _values, result)
     result = val.last 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 113)
  def _reduce_39(val, _values, result)
            @handler.start_selector val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 119)
  def _reduce_40(val, _values, result)
            # FIXME: should always garantee array
        sel = Selector.new(val.first, {})
        result = [sel, val[2]].flatten
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 125)
  def _reduce_41(val, _values, result)
            result = [Selector.new(val.first, {})]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 131)
  def _reduce_42(val, _values, result)
            val = val.flatten
        val[2].combinator = val.delete_at 1
        result = val
      
    result
  end
.,.,

# reduce 43 omitted

module_eval(<<'.,.,', 'parser.y', 138)
  def _reduce_44(val, _values, result)
     result = :s 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 139)
  def _reduce_45(val, _values, result)
     result = :> 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 140)
  def _reduce_46(val, _values, result)
     result = :+ 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 144)
  def _reduce_47(val, _values, result)
            selector = val.first
        selector.additional_selectors = val.last
        result = [selector]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 148)
  def _reduce_48(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 151)
  def _reduce_49(val, _values, result)
            ss = Selectors::Simple.new nil, nil
        ss.additional_selectors = val.flatten
        result = [ss]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 157)
  def _reduce_50(val, _values, result)
     result = Selectors::Type.new interpret_identifier val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 158)
  def _reduce_51(val, _values, result)
     result = Selectors::Universal.new val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 161)
  def _reduce_52(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 162)
  def _reduce_53(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 163)
  def _reduce_54(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 164)
  def _reduce_55(val, _values, result)
     result = val 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 165)
  def _reduce_56(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 166)
  def _reduce_57(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 167)
  def _reduce_58(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 168)
  def _reduce_59(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 172)
  def _reduce_60(val, _values, result)
            result = Selectors::Id.new interpret_identifier val.first.sub(/^#/, '')
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 176)
  def _reduce_61(val, _values, result)
            result = Selectors::Class.new interpret_identifier val.last
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 181)
  def _reduce_62(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_identifier(val[3]),
          Selectors::Attribute::EQUALS
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 188)
  def _reduce_63(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_string(val[3]),
          Selectors::Attribute::EQUALS
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 195)
  def _reduce_64(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_string(val[3]),
          Selectors::Attribute::INCLUDES
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 202)
  def _reduce_65(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_identifier(val[3]),
          Selectors::Attribute::INCLUDES
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 209)
  def _reduce_66(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_identifier(val[3]),
          Selectors::Attribute::DASHMATCH
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 216)
  def _reduce_67(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          interpret_string(val[3]),
          Selectors::Attribute::DASHMATCH
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 223)
  def _reduce_68(val, _values, result)
            result = Selectors::Attribute.new(
          interpret_identifier(val[1]),
          nil,
          Selectors::Attribute::SET
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 232)
  def _reduce_69(val, _values, result)
            result = Selectors::pseudo interpret_identifier(val[1])
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 235)
  def _reduce_70(val, _values, result)
            result = Selectors::PseudoElement.new(
          interpret_identifier(val[2])
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 240)
  def _reduce_71(val, _values, result)
            result = Selectors::PseudoClass.new(
          interpret_identifier(val[1].sub(/\($/, '')),
          ''
        )
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 246)
  def _reduce_72(val, _values, result)
            result = Selectors::PseudoClass.new(
          interpret_identifier(val[1].sub(/\($/, '')),
          interpret_identifier(val[2])
        )
      
    result
  end
.,.,

# reduce 73 omitted

# reduce 74 omitted

# reduce 75 omitted

module_eval(<<'.,.,', 'parser.y', 259)
  def _reduce_76(val, _values, result)
     @handler.property val.first, val[2], val[3] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 261)
  def _reduce_77(val, _values, result)
     @handler.property val.first, val[3], val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 263)
  def _reduce_78(val, _values, result)
     @handler.property val.first, val[3], val[4] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 265)
  def _reduce_79(val, _values, result)
     @handler.property val.first, val[4], val[5] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 268)
  def _reduce_80(val, _values, result)
     result = true 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 269)
  def _reduce_81(val, _values, result)
     result = false 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 272)
  def _reduce_82(val, _values, result)
     result = interpret_identifier val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 273)
  def _reduce_83(val, _values, result)
     result = interpret_identifier val.join 
    result
  end
.,.,

# reduce 84 omitted

# reduce 85 omitted

# reduce 86 omitted

module_eval(<<'.,.,', 'parser.y', 282)
  def _reduce_87(val, _values, result)
            result = [val.first, val.last].flatten
        val.last.first.operator = val[1]
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 285)
  def _reduce_88(val, _values, result)
     result = val.flatten 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 286)
  def _reduce_89(val, _values, result)
     result = val 
    result
  end
.,.,

# reduce 90 omitted

# reduce 91 omitted

# reduce 92 omitted

# reduce 93 omitted

# reduce 94 omitted

# reduce 95 omitted

module_eval(<<'.,.,', 'parser.y', 297)
  def _reduce_96(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 299)
  def _reduce_97(val, _values, result)
            name = interpret_identifier val.first.sub(/\($/, '')
        if name == 'rgb'
          result = Terms::Rgb.new(*val[1])
        else
          result = Terms::Function.new name, val[1]
        end
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 308)
  def _reduce_98(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 309)
  def _reduce_99(val, _values, result)
     result = Terms::Hash.new val.first.sub(/^#/, '') 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 312)
  def _reduce_100(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 313)
  def _reduce_101(val, _values, result)
     result = Terms::URI.new interpret_uri val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 315)
  def _reduce_102(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 316)
  def _reduce_103(val, _values, result)
     result = Terms::String.new interpret_string val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 320)
  def _reduce_104(val, _values, result)
            result = val[1]
        val[1].unary_operator = val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 324)
  def _reduce_105(val, _values, result)
            result = Terms::Number.new numeric val.first
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 327)
  def _reduce_106(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, '%'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 330)
  def _reduce_107(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 334)
  def _reduce_108(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, 'em'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 337)
  def _reduce_109(val, _values, result)
            result = Terms::Number.new numeric(val.first), nil, 'ex'
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 340)
  def _reduce_110(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 344)
  def _reduce_111(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 348)
  def _reduce_112(val, _values, result)
            unit    = val.first.gsub(/[\s\d.]/, '')
        result = Terms::Number.new numeric(val.first), nil, unit
      
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 353)
  def _reduce_113(val, _values, result)
     result = :minus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 354)
  def _reduce_114(val, _values, result)
     result = :plus 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 357)
  def _reduce_115(val, _values, result)
     result = val.first 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 358)
  def _reduce_116(val, _values, result)
     result = Terms::Ident.new interpret_identifier val.first 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

    end   # class Parser
    end   # module CSS
  end   # module CSSPool
